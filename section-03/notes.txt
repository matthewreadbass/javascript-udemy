JavaScript Fundamentals - Part 2

Activating Strict Mode:

    Makes it easier for you to write more secure JS code
    Must be the first statement in the script (excluding comments)
        'use strict';
    Forbids you writing certain code
    Creates visible errors in the developer console instead of failing silently
    Reserves a short list of variable names for features that might be used later in the programme

Functions

    A piece of code that can by used over and over again in our code
    Can hold multiple lines of code
        function functionName(args) {
            <block-body>;
        }
    Functions are called/run or invoked
        functionName();
    Used to process data

Function Declarations vs Expressions

    Function Declarations:
        function functionName(args) {
            <block-body>;
        }
        
        const constantName = variableName(args);

    Function Expressions:
        const variableName = function (args) {
            <block-body>;
        }

        const constantName = variableName(args);

    With no functionName for function expressions, these functions are called anonymous functions
    Function declarations can be called in the code before they are defined - function expressions cannot

Arrow Functions

    Shorthand function expression -> "Arrow Function"
        const functionName = variables => <block-bod>;

Functions Calling Other Functions

    Helps to abstract your process and keep your code DRY

Introduction to Arrays

    Same concept as Ruby...
        const arrayName = [arrayObject1, arrayObject2, arrayObject3];
        const arrayName = new Array(arrayObject1, arrayObject2, arrayObject3);
    Access elements using square bracket syntax (0 indexed)
    .length method still available
    Mutate array elements with square bracket syntax
        Arrays are not immutable
        Can be changed despite being declared as const
        Whole arrays cannot be changed, but individual items can
    