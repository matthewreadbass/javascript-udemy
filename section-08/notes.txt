A high-level overview of JS

    JS is a high-level, prototype-based object-oriented, 
    multi-paradigm, interpreted or just-in-time complied, 
    dynamic, single-threaded, garbage-collected programming language 
    with first-class functions and a non-blocking event loop 
    concurrency model

    - High-level - developer does not have to manage resources manually as it is all automated
    - Garbage-collected - automatically cleans the memory, so the developer doesn't have to
    - Interpreted or just-in-time complied - Doesn't require compiling/interpretting before running
    - Multi-paradigm - Procedural/Object-Oriented/Functional Programming all in one
    - Prototype-based object-oriented - Prototypal inheritance (similar to Ruby inheritance?)
    - First-class functions - Functions are treatd as variables
    - Dynamic - Dynamic typing
    - Single-threaded - Runs in a single thread (so can only do one thing at a time)
    - Non-blocking event loop - Takes long running tasks, executes them in the background 
    and puts them back in the main thread once they are finished
    - Concurrency model - Handles multiple tasks happening at the same time