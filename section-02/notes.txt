- JavaScript console (to test JS in browser) = cmd+option+j (mac) or ctrl+alt+j (windows)

- display an alert box
  - alert('Hello World!')
- set a variable
  - let variable = 'I am a variable'
- write an if statement
  - if (variable === 'I am a varible!') alert('It is a variable')
- print to the console
  - console.log('stuff to print')

JavaScript is a high-level, object-oriented, multi-paradigm programming language
JavaScript is the verbs of web development (HTML = nouns & CSS = adjectives)

Modern JavaScript started with the release of ES6/ES2015

Seperate concerns by writing individual script.js files and then referencing them in the <body> tag
  - <script src="script.js"></script>

Usually, JS is attached to web pages, so needs to be attached to an .html document
  - write JS using <script> tags

A value is the most fundamental unit of information in JS - strings, numbers, booleans etc.
  - store in variables (declare)
    - let firstName = 'Matthew';

use camelCase to name variables
  - variable names can only contain letters, numbers, _ and $

In JS, values are either Objects or primitives
  - Object:
    let me = {
      name: 'Matthew'
    };
  - Primitive:
    let firstName = 'Matthew';
    let age = 27;

Primitive data types:
  - Numbers (decimals and integers are all numbers)
  - strings
  - Booleans
  - Undefined (no value assigned) - let children;
  - Null
  - Symbol
  - BigInt (numbers too big to be represented by Numbers)

Dynamic Typing - not Static Typing
  - Only use let when you declare a value, not when you change the value

Comments:
  // single line comment
  /* Multi-line
    comment */

You can use double or single quotes to create a string

typeof operator works the same as object.class in Ruby

let
  - declare variables that are mutable / undefined
    let age = 30;
    age = 31;

const
  - value cannot be changed (immutable)
    const birthYear = 1994;
  - use as default
    - good to have as few mutable variables as possible in your code

var
  - used in legacy codebases
  - commonplace before ES6
  - works the same as let
    var age = 30;
    age = 31;

